name: 'Open issue'
description: 'Open an issue, but optionally skip if an existing issue with the same title already exists'
inputs:
  repo:
    description: "The owner/repo that you want to open an issue in.  For example 'fastai/fastai'"
    required: true
    default: ${{ github.repository }}
  title:
    description: 'Issue Title'
    required: true
  body:
    description: 'Issue Body'
    required: true
  token:
    description: 'GitHub Token'
    required: true
  skip_if_exists_flag:
    description: 'Setting this to any value will result in not an opening a new issue if there is an existing issue with the same title.'
    required: false
outputs:
  bool_new_issue_created: 
    description: "Returns 'True' or 'False' depending on if new issue was created.  Can only be 'False' if input skip_if_exists_flag is specified."
    value: ${{ steps.issue.outputs.bool_new_issue_created }}
  related_issue_num: 
    description: "Returns issue number of issue that was created.  If a new issue is not created because of the skip_if_exists_flag, the issue number of corresponding existing issue is returned."
    value: ${{ steps.issue.outputs.related_issue_num }}
  related_issue_url: 
    description: "Same as related_issue_num except returns the URL for the issue instead of the issue number."
    value: ${{ steps.issue.outputs.related_issue_url }}
runs:
  using: "composite"
  steps: 
    - name: source python scripts
      run: |
        git clone https://github.com/fastai/workflows.git --depth 1
        echo "PYTHONPATH=${PYTHONPATH}:$(pwd)/workflows/workflow_python_scripts" >> $GITHUB_ENV
        pip install fastcore PyGithub
      shell: bash
    - name: Create Issue
      id: issue
      run: |
        body="""
        ${{ inputs.body }}
        """
        from create_issue import create_issue
        create_issue(repo="${{ inputs.repo }}",
                     title="${{ inputs.title }}",
                     body=body,
                     token="${{ inputs.token }}",
                     skip_if_exists="${{ inputs.skip_if_exists_flag }}")
      shell: python
 
